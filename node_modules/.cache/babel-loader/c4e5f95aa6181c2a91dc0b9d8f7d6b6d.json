{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tatuk\\\\OneDrive\\\\Desktop\\\\VisualStudioProjects\\\\reactrouter-master\\\\src\\\\components\\\\Add.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n/* 1st form.\nconst Add = ({onSubmit, inputValue, onChange}) => {\n    return(\n        <div className=\"container\">\n           <div>\n               <form onSubmit={onSubmit}>\n                   <input value={inputValue} onChange={onChange} />\n                   <button type=\"submit\">Save Node</button>\n               </form>\n           </div>\n        </div>\n    )\n}\n*/\n// Validated form\n\nconst Add = () => {\n  const [validated, setValidated] = useState(false); // State of validation, meaning that has the form been validated.\n\n  const [newNode, setNewNode] = useState(''); // State of the new node to be made\n  // Keeps track of the inputs value.\n\n  const handleNodeChange = event => {\n    console.log(event.target.value);\n    setNewNode(event.target.value);\n  };\n\n  const handleSubmitValidation = event => {\n    const form = event.currentTarget; // If there are any invalid fields, won't send the form.\n    // On a valid form creates a new Node object with the newNode's state and sends it via POST to json-server\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const nodeObject = {\n        content: newNode\n      };\n      axios.post('http://localhost:3001/nodes', nodeObject);\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmitValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(Form.Control, {\n    autoFocus: true,\n    type: \"text\",\n    placeholder: \"Enter content\",\n    onChange: handleNodeChange,\n    hasValidation: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Please insert content.\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Add\")));\n};\n\nexport default Add;","map":{"version":3,"sources":["C:/Users/tatuk/OneDrive/Desktop/VisualStudioProjects/reactrouter-master/src/components/Add.js"],"names":["React","useState","useEffect","Form","Button","axios","Add","validated","setValidated","newNode","setNewNode","handleNodeChange","event","console","log","target","value","handleSubmitValidation","form","currentTarget","checkValidity","preventDefault","stopPropagation","nodeObject","content","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA;;;;;;;;;;;;;;AAeA;;AACA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CADc,CACoC;;AAClD,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAFc,CAE6B;AAE3C;;AACA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,UAAU,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACH,GAHD;;AAMA,QAAMC,sBAAsB,GAAIL,KAAD,IAAW;AACtC,UAAMM,IAAI,GAAGN,KAAK,CAACO,aAAnB,CADsC,CAGtC;AACA;;AACA,QAAGD,IAAI,CAACE,aAAL,OAAyB,KAA5B,EAAmC;AAC/BR,MAAAA,KAAK,CAACS,cAAN;AACAT,MAAAA,KAAK,CAACU,eAAN;AACH,KAHD,MAGO;AACH,YAAMC,UAAU,GAAG;AACfC,QAAAA,OAAO,EAAEf;AADM,OAAnB;AAGAJ,MAAAA,KAAK,CAACoB,IAAN,CAAW,6BAAX,EAA0CF,UAA1C;AACH;;AACDf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEH,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAED,SAA5B;AAAuC,IAAA,QAAQ,EAAEU,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,SAAS,MAAvB;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,WAAW,EAAC,eAAhD;AAAgE,IAAA,QAAQ,EAAEN,gBAA1E;AAA4F,IAAA,aAAa,MAAzG;AAA0G,IAAA,QAAQ,MAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CADJ,CADJ;AAYH,CAzCD;;AA4CA,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\n\n\n/* 1st form.\nconst Add = ({onSubmit, inputValue, onChange}) => {\n    return(\n        <div className=\"container\">\n           <div>\n               <form onSubmit={onSubmit}>\n                   <input value={inputValue} onChange={onChange} />\n                   <button type=\"submit\">Save Node</button>\n               </form>\n           </div>\n        </div>\n    )\n}\n*/\n\n// Validated form\nconst Add = () => {\n    const [validated, setValidated] = useState(false) // State of validation, meaning that has the form been validated.\n    const [newNode, setNewNode] = useState('') // State of the new node to be made\n\n    // Keeps track of the inputs value.\n    const handleNodeChange = (event) => {\n        console.log(event.target.value)\n        setNewNode(event.target.value)\n    }\n\n\n    const handleSubmitValidation = (event) => {\n        const form = event.currentTarget\n\n        // If there are any invalid fields, won't send the form.\n        // On a valid form creates a new Node object with the newNode's state and sends it via POST to json-server\n        if(form.checkValidity() === false) {\n            event.preventDefault()\n            event.stopPropagation()\n        } else {\n            const nodeObject = {\n                content: newNode\n            }\n            axios.post('http://localhost:3001/nodes', nodeObject)\n        }\n        setValidated(true)\n\n    }\n\n    return(\n        <div className='container'>\n            <Form noValidate validated={validated} onSubmit={handleSubmitValidation}>\n                <Form.Group className='mb-3' controlId='formContent'>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control autoFocus type='text' placeholder='Enter content' onChange={handleNodeChange} hasValidation required/>\n                    <Form.Control.Feedback type='invalid'>Please insert content.</Form.Control.Feedback>\n                </Form.Group>\n                <Button variant='primary' type='submit'>Add</Button>\n            </Form>\n        </div>\n    )\n}\n\n\nexport default Add"]},"metadata":{},"sourceType":"module"}
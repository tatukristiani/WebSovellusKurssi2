{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tatuk\\\\OneDrive\\\\Desktop\\\\VisualStudioProjects\\\\reactrouter-master\\\\src\\\\components\\\\Add.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nconst Add = ({\n  onSubmit,\n  inputValue,\n  onChange\n}) => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(Form.Control, {\n    hasValidation: true,\n    type: \"text\",\n    placeholder: \"Enter content\",\n    value: inputValue,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Please insert content.\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Add\")));\n};\n/*\n\nconst Add = ({onSubmit, inputValue, onChange}) => {\n    const [nodes, setNodes] = useState([])\n    const [newNode, setNewNode] = useState('')\n\n \n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNode(event.target.value)\n    }\n    \n    useEffect(() => {\n        axios.get('http://localhost:3001/nodes')\n        .then(response => {\n            setNodes(response.data)\n        })\n    }, [])\n\n    const [validated, setValidated] = useState(false)\n\n    const handleSubmitValidation = (event) => {\n        const form = event.currentTarget\n\n        if(form.checkValidity() === false) {\n            event.preventDefault()\n            event.stopPropagation()\n        } else {\n            onSubmit\n            /*\n            const nodeObject = {\n                content: newNode\n            }\n            axios.post('http://localhost:3001/nodes', nodeObject)\n            .then(response => {\n                setNodes(nodes.concat(response.data))\n                setNewNode('')\n            })\n            \n        }\n\n        setValidated(true)\n    }\n\n    return(\n        <div className='container'>\n            <Form noValidate validated={validated} onSubmit={handleSubmitValidation}>\n                <Form.Group className='mb-3' controlId='formContent'>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control hasValidation type='text' placeholder='Enter content' required/>\n                    <Form.Control.Feedback type='invalid'>Please insert content.</Form.Control.Feedback>\n                </Form.Group>\n                <Button variant='primary' type='submit'>Add</Button>\n            </Form>\n        </div>\n    )\n}\n*/\n\n\nexport default Add;","map":{"version":3,"sources":["C:/Users/tatuk/OneDrive/Desktop/VisualStudioProjects/reactrouter-master/src/components/Add.js"],"names":["React","useState","useEffect","Form","Button","axios","Add","onSubmit","inputValue","onChange","validated","setValidated","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AACpCJ,MAAAA,KAAK,CAACK,eAAN;AACC;;AAEDP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,GARJ;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAED,SAA5B;AAAuC,IAAA,QAAQ,EAAEE,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,aAAa,MAA3B;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,WAAW,EAAC,eAApD;AAAoE,IAAA,KAAK,EAAEJ,UAA3E;AAAuF,IAAA,QAAQ,EAAEC,QAAjG;AAA2G,IAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CADJ,CADJ;AAYH,CAzBD;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\n\n\nconst Add = ({onSubmit, inputValue, onChange}) => {\n    const [validated, setValidated] = useState(false)\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n        event.stopPropagation();\n        }\n\n        setValidated(true);\n       };\n\n    return(\n        <div className='container'>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group className='mb-3' controlId='formContent'>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control hasValidation type='text' placeholder='Enter content' value={inputValue} onChange={onChange} required/>\n                    <Form.Control.Feedback type='invalid'>Please insert content.</Form.Control.Feedback>\n                </Form.Group>\n                <Button variant='primary' type='submit'>Add</Button>\n            </Form>\n        </div>\n    )\n}\n\n/*\n\nconst Add = ({onSubmit, inputValue, onChange}) => {\n    const [nodes, setNodes] = useState([])\n    const [newNode, setNewNode] = useState('')\n\n \n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNode(event.target.value)\n    }\n    \n    useEffect(() => {\n        axios.get('http://localhost:3001/nodes')\n        .then(response => {\n            setNodes(response.data)\n        })\n    }, [])\n\n    const [validated, setValidated] = useState(false)\n\n    const handleSubmitValidation = (event) => {\n        const form = event.currentTarget\n\n        if(form.checkValidity() === false) {\n            event.preventDefault()\n            event.stopPropagation()\n        } else {\n            onSubmit\n            /*\n            const nodeObject = {\n                content: newNode\n            }\n            axios.post('http://localhost:3001/nodes', nodeObject)\n            .then(response => {\n                setNodes(nodes.concat(response.data))\n                setNewNode('')\n            })\n            \n        }\n\n        setValidated(true)\n    }\n\n    return(\n        <div className='container'>\n            <Form noValidate validated={validated} onSubmit={handleSubmitValidation}>\n                <Form.Group className='mb-3' controlId='formContent'>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control hasValidation type='text' placeholder='Enter content' required/>\n                    <Form.Control.Feedback type='invalid'>Please insert content.</Form.Control.Feedback>\n                </Form.Group>\n                <Button variant='primary' type='submit'>Add</Button>\n            </Form>\n        </div>\n    )\n}\n*/\n\nexport default Add"]},"metadata":{},"sourceType":"module"}